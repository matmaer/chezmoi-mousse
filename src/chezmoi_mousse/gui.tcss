/****************/
/* tcss classes */
/****************/

# .width-auto {
#   width: auto;
# }

.tab-content-left {
  margin-right: 2;
  border: blue;
  # width: 20;
}

.tab-content-right {
  border: blue;
}

.top-border-title-style {
  border-top: solid $primary;
  border-title-align: center;
  border-title-style: bold;
  /* min width for two buttons with 4 chars: Tree and List plus padding */
  # min-width: 12;
}

/* assigned to ManagedTree classes and FilteredTree class */
.tree-explorer {
  width: auto; /* shrinks width of the Tree classes */
}

/* assigned to the ScrollableContainer class containing FilteredDirTree */
.dir-tree-scrollable-container {
  width: auto; /* shrinks width around the directory tree in AddTab */
}

/* assigned to horizontal containers containing the ContentSwitcher class */
.content-switcher-horizontal {
  width: auto; /* shrinks width in the TreeTabsSwitchers class */
}

/* assigned to ContentSwitcher classes */
.content-switcher-left {
  width: auto; /* shrinks the content around the ManagedTree widgets */
  border: green;
}
.content-switcher-right {
  border: green;
  width: auto;
  # width: auto;
}


/* classes used within the Horizontal containing filters */
.filters-container {
  background: $surface;
  background-tint: $surface;
  border-top: inner $surface;
  border-bottom: inner $surface;
  padding-right: 2;
  width: auto;
  # height: 20;

  .padding-bottom-once {
    padding-bottom: 1;
    width: auto;
  }

  /* applies to all Container classes that contain a single filter switch */
  .single-filter-container {
    layout: horizontal;
    width: auto;
    layout: horizontal;
    align: center middle;
    height: auto;  /* if not set, only one filter is visible in AddTab */

    /* color of the label text */
    color: $foreground-darken-1;

    /* style the switch itself */
    .switch--slider {
      color: $error-darken-3;
    }
    .filter-switch {
      background: $surface;
      background-tint: $surface;

      &.-on .switch--slider {
        color: $success;
      }

      &:hover {
        &>.switch--slider {
          color: $error;
        }

        &.-on>.switch--slider {
          color: $success-lighten-2;
        }
      }
    }
  }
}

/* assigned to the TabButton Vertical parent class in super.init */
.tab-button-vertical {
  align: center middle;
  width: auto;
  background: $surface-lighten-2;
  background-tint: $surface-lighten-2;
}

TabButton {
  /* assigned to the Button class within the Vertical container for a Button */
  .tab-button {
    /* default min width from textual is 16, setting to shortest button text */
    min-width: 4;
    /* setting the longest button text */
    max-width: 9;
    color: $text;
    text-style: none;

    &:hover {
    text-style: bold;
    }

    &.last-clicked {
      color: $accent;
      text-style: none;

      &:hover {
        text-style: none;
      }
    }
  }
}

/* assigned to TabButtonsGroup Horizontal parent class in super.init */
.tab-buttons-horizontal {
  border-right: magenta;
  height: 1;
  width: auto;
}

.tab-buttons-group {
  /* assigned to just one horizontal button container area */
  .tab-buttons-area-horizontal {
    width: auto;
    # background: yellow;
  }
}

AutoWarning {
  height: auto;
  padding: 0 1 0 1;
  margin: 0 1 0 1;
  dock: top;
  text-align: center;
  border-bottom: dashed $panel;
}

MainScreen {
}


ModalScreen {
  &.doctor-modal {
    border: round $warning-darken-2;
    margin-bottom: 1;
  }
}

#flow_diagram {
  padding: 0 1 0 1;
  min-width: 80;
}

/******************************************************************/
/* App default TCSS which are different than the textual defaults */
/******************************************************************/

/* todo: avoid "*"" selector */

* {
  background-tint: $background;
  scrollbar-size-vertical: 1;
  scrollbar-background: $background;
  scrollbar-background-active: $background;
  scrollbar-background-hover: $background;
  scrollbar-corner-color: $background;
  border: none;
}

Collapsible {
  padding: 0;
}

CollapsibleTitle {
  color: $primary-lighten-3;
  &:hover {
    text-style: bold;
  }
}

DataTable {
  &>.datatable--header {
    text-style: none;
  }
}

DirectoryTree {
  &>.directory-tree--folder {
    color: $primary-lighten-3;
    text-style: none;
  }

  &>.directory-tree--extension {
    text-style: none;
  }

  &>.directory-tree--hidden {
    text-style: none;
  }

  &>.directory-tree--file {
    color: $success-lighten-3;
    text-style: none;
  }
}

Footer {
  height: 3;
  border-top: dashed $panel-lighten-1;
  border-bottom: dashed $panel;
}

Header {
  border-bottom: dashed $panel-lighten-1;
  color: $primary;
  height: 2;
  text-style: bold;
}

Toast {
  background: $surface;
  background-tint: $surface;
}

Tree {
  &>.tree--cursor {
    text-style: none;
    color: $accent-lighten-3;
  }

  &>.tree--highlight-line {
    text-style: none;
  }

  &>.tree--highlight {
    text-style: bold;
  }

  &>.tree--guides {
    color: $primary-lighten-3;
  }

  &>.tree--guides-hover {
    color: $primary-lighten-3;
  }

  &>.tree--guides-selected {
    color: $primary-lighten-3;
  }

  &:focus {
    &>.tree--guides {
      color: $primary-lighten-3;
    }

    &>.tree--guides-hover {
      color: $primary-lighten-3;
    }

    &>.tree--guides-selected {
      color: $primary-lighten-3;
    }
  }
}


/*
Operate {
  background-tint: $surface;
  background: $surface;

  & .operate-button {
    border-top: heavy $primary;
    background-tint: $surface;
    background: $surface;
    color: $primary;
    margin: 0 7 0 7;
    width: 8;
    text-style: none;

    &:disabled {
      text-opacity: 0.6;
    }

    &:focus {
      border-top: heavy $primary-lighten-2;
    }

    &:hover {
      border-top: heavy $primary-lighten-3;
      color: $accent-lighten-3;
    }

    &.-active {
      border-top: heavy $primary-lighten-2;
    }
  }

  #button_container {
    height: 3;
    align: center bottom;
    dock: bottom;
  }

  & .operate-collapsible {
    background-tint: $surface;
    background: $surface;
  }

  & .operate-checkbox {
    margin: 0;
    padding: 0;
    background: $surface;
    background-tint: $surface;

    &>.toggle--button {
      color: $error;
      background: $surface;
      background-tint: $surface;
    }

    &.-on>.toggle--button {
      color: $success;
    }

    &:focus>.toggle--button {
      text-style: none;
    }

    &:hover>.toggle--button {
      text-style: bold;

    }
  }
}

*/


